import logging

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler
from telegram.error import TimedOut
# –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞
from database import db_manager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –¢–û–ö–ï–ù!)
BOT_TOKEN = "8430726619:AAGqEt09f68k1iBatN35LOXPhPjbK0VTJkU"

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler (–¥–æ–±–∞–≤–ª—è–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º)
DESCRIPTION, MEDIA, FEEDBACK = range(3)  # –û–±–Ω–æ–≤–ª—è–µ–º range

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–≥–æ –º–µ–Ω—é
SELECT_SHOP, SELECT_CATEGORY, PRODUCT_QUESTION = range(3, 6)  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é
# –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ (–µ—Å–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ)
FEEDBACK = 6
BONUS_SCREENSHOT, BONUS_METHOD = range(7, 9)
# –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–¥–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
MAIN_MENU_KEYBOARD = ReplyKeyboardMarkup(
    [
        ["–í–æ–ø—Ä–æ—Å –ø–æ —Ç–æ–≤–∞—Ä—É", "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–∞–∫–∞"],
        ["–ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤", "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é..."
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞
SHOP_KEYBOARD = ReplyKeyboardMarkup(
    [
        ["OZON", "WildBerries"],
        ["–ù–∞–∑–∞–¥"]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω..."
)
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞
CATEGORY_KEYBOARD = ReplyKeyboardMarkup(
    [
        ["–õ–∞–º–ø—ã", "–ú–∞—Å—Å–∞–∂—ë—Ä—ã"],
        ["–ò–≥—Ä—É—à–µ—á–Ω–æ–µ –æ—Ä—É–∂–∏–µ", "–î—Ä—É–≥–æ–µ"],
        ["–ù–∞–∑–∞–¥"]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é..."
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
BACK_KEYBOARD = ReplyKeyboardMarkup(
    [["–ù–∞–∑–∞–¥"]],
    resize_keyboard=True
)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    user = update.effective_user
    welcome_text = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}! üëã\n"
        "–Ø ‚Äî –±–æ—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ MalDina.\n"
        "–ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?\n\n"
        "‚Ä¢ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–≤–∞—Ä–µ\n"
        "‚Ä¢ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ/–±—Ä–∞–∫–µ\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤\n"
        "‚Ä¢ –û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"
    )
    await update.message.reply_text(welcome_text, reply_markup=MAIN_MENU_KEYBOARD)


# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î (–ø–æ—Å–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ start)
# async def test_db(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
#     test_message = "–±—Ä–∞–∫ —Ç–æ–≤–∞—Ä–∞"
#     results = db_manager.search_faq(test_message)
#
#     if results:
#         response = "–ù–∞–π–¥–µ–Ω—ã —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è:\n\n"
#         for question, answer in results:
#             response += f"‚ùì {question}\nüí° {answer}\n\n"
#     else:
#         response = "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
#
#     await update.message.reply_text(response)


# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é

# async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
#     user_choice = update.message.text
#
#     if user_choice == "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–∞–∫–∞":
#         await start_defect_conversation(update, context)
#     elif user_choice == "–ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤":
#         await handle_bonus_request(update, context)
#     elif user_choice == "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å":
#         await start_feedback_conversation(update, context)
#     else:
#         # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ FAQ
#         await handle_text_message(update, context)
async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    user_choice = update.message.text

    if user_choice == "–ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤":
        await handle_bonus_request(update, context)
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ FAQ
        await handle_text_message(update, context)


async def handle_product_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–í–æ–ø—Ä–æ—Å –ø–æ —Ç–æ–≤–∞—Ä—É'."""
    help_text = (
        "–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–≤–∞—Ä–µ. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ.\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å:\n"
        "   ‚Ä¢ `–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤?`\n"
        "   ‚Ä¢ `–ö–∞–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–∞–∫ —Ç–æ–≤–∞—Ä–∞?`\n"
        "   ‚Ä¢ `–ö–∞–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –µ—Å—Ç—å?`\n"
        # "   ‚Ä¢ –î—Ä—É–≥–æ–π –≤–∞—à –≤–æ–ø—Ä–æ—Å"
    )
    await update.message.reply_text(
        help_text,
        parse_mode='MARKDOWN',
        reply_markup=ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    )


async def handle_product_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ —Ç–æ–≤–∞—Ä—É —Å –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞."""
    await update.message.reply_text(
        "üè™ <b>–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä:",
        parse_mode='HTML',
        reply_markup=SHOP_KEYBOARD
    )
    return SELECT_SHOP


async def handle_shop_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞."""
    shop_name = update.message.text

    if shop_name == "–ù–∞–∑–∞–¥":
        await update.message.reply_text(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=MAIN_MENU_KEYBOARD
        )
        return ConversationHandler.END

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    context.user_data['selected_shop'] = shop_name

    await update.message.reply_text(
        f"üè™ –í—ã–±—Ä–∞–Ω –º–∞–≥–∞–∑–∏–Ω: <b>{shop_name}</b>\n\n"
        "üì¶ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:</b>",
        parse_mode='HTML',
        reply_markup=CATEGORY_KEYBOARD
    )
    return SELECT_CATEGORY


async def handle_category_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞."""
    category = update.message.text

    if category == "–ù–∞–∑–∞–¥":
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:",
            reply_markup=SHOP_KEYBOARD
        )
        return SELECT_SHOP

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    context.user_data['selected_category'] = category

    await update.message.reply_text(
        f"üì¶ –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: **{category}**\n\n"
        "‚ùì **–¢–µ–ø–µ—Ä—å –∑–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–≤–∞—Ä–µ:**\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
        "   ‚Ä¢ `–ß—Ç–æ —Ç–∞–∫–æ–µ –ª–∞–º–ø–∞?`\n"
        # "   ‚Ä¢ `–ù—É–∂–Ω–æ –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∏–≥—Ä—É—à–µ—á–Ω–æ–µ –æ—Ä—É–∂–∏–µ?`\n"
        "   ‚Ä¢ `–ö–∞–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –µ—Å—Ç—å?`\n"
        "   ‚Ä¢ `–î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å`",
        parse_mode='MARKDOWN',
        reply_markup=BACK_KEYBOARD
    )
    return PRODUCT_QUESTION


async def handle_product_question_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–≤–∞—Ä–µ –∏ –∏—â–µ—Ç –æ—Ç–≤–µ—Ç –≤ FAQ."""
    user_question = update.message.text

    if user_question == "–ù–∞–∑–∞–¥":
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:",
            reply_markup=CATEGORY_KEYBOARD
        )
        return SELECT_CATEGORY

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ –≤–æ–ø—Ä–æ—Å—É –¥–ª—è –ø–æ–∏—Å–∫–∞
    shop = context.user_data.get('selected_shop', '–ù–µ —É–∫–∞–∑–∞–Ω')
    category = context.user_data.get('selected_category', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')

    enhanced_question = f"{user_question} {category}"
    results = db_manager.search_faq(enhanced_question)

    if results:
        # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç—ã –≤ FAQ
        response = (f"üîç <b>–í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É:</b>\n\n"
                    f"üè™ –ú–∞–≥–∞–∑–∏–Ω: {shop}\n"
                    f"üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n\n")

        for question, answer in results[:2]:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 2 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            response += f"‚ùì <b>{question}</b>\nüí° {answer}\n\n"

        response += "–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å."

        await update.message.reply_text(
            response,
            parse_mode='HTML',
            reply_markup=MAIN_MENU_KEYBOARD
        )
    else:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ FAQ
        # not_found_text = (
        #     f"‚ùå <b>–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n\n"
        #     f"üè™ –ú–∞–≥–∞–∑–∏–Ω: {shop}\n"
        #     f"üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n\n"
        #     "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ.\n\n"
        #     "–í—ã –º–æ–∂–µ—Ç–µ:\n"
        #     "‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n"
        #     "‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É —á–µ—Ä–µ–∑ –º–µ–Ω—é '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–∞–∫–∞'\n"
        #     "‚Ä¢ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é"
        # )
        not_found_text = (f'–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —á—É—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏.'
                          f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ.')
        await update.message.reply_text(
            not_found_text,
            parse_mode='HTML',
            reply_markup=MAIN_MENU_KEYBOARD
        )

    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data.clear()
    return ConversationHandler.END


# –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è FAQ)
async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏—â–µ—Ç –æ—Ç–≤–µ—Ç –≤ FAQ."""
    user_message = update.message.text
    print(user_message)
    results = db_manager.search_faq(user_message)
    print(results)
    if results:
        # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç—ã –≤ FAQ
        response = "üîç <b>–í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É:</b>\n\n"
        for question, answer in results[:3]:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            response += f"‚ùì <b>{question}</b>\nüí° {answer}\n\n"

        response += "–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–æ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é."

        await update.message.reply_text(
            response,
            parse_mode='HTML',
            reply_markup=MAIN_MENU_KEYBOARD
        )
    else:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ FAQ
        not_found_text = (
            "‚ùå <b>–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n\n"
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n"
            "‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É —á–µ—Ä–µ–∑ –º–µ–Ω—é '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–∞–∫–∞'\n"
            "‚Ä¢ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é"
        )
        await update.message.reply_text(
            not_found_text,
            parse_mode='HTML',
            reply_markup=MAIN_MENU_KEYBOARD
        )


async def start_defect_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–∞–∫–∞."""
    await update.message.reply_text(
        "üõ†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–∞–∫–∞ —Ç–æ–≤–∞—Ä–∞</b>\n\n"
        "–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:\n"
        "   1. –í —á—ë–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å\n"
        "   2. –ö–æ–≥–¥–∞ –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–∫–∞–∑\n"
        "   3. –ë—ã–ª –ª–∏ —Ç–æ–≤–∞—Ä –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏\n\n"
        "<i>–í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ</i>",
        parse_mode='HTML',
        reply_markup=ReplyKeyboardRemove()
    )
    return DESCRIPTION


async def handle_description(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_description = update.message.text
    context.user_data['defect_description'] = user_description

    await update.message.reply_text(
        "üìé <b>–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã</b>\n\n"
        "–¢–µ–ø–µ—Ä—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤–∏–¥–Ω–∞ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞.\n\n"
        "<i>–ï—Å–ª–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è</i>",
        parse_mode='HTML'
    )
    return MEDIA


async def handle_media(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —ç—Ç–æ—Ç —à–∞–≥."""
    if update.message.photo:
        context.user_data['defect_media'] = update.message.photo[-1].file_id
        media_type = "—Ñ–æ—Ç–æ"
    elif update.message.video:
        context.user_data['defect_media'] = update.message.video.file_id
        media_type = "–≤–∏–¥–µ–æ"
    elif update.message.document:
        context.user_data['defect_media'] = update.message.document.file_id
        media_type = "–¥–æ–∫—É–º–µ–Ω—Ç"
    else:
        context.user_data['defect_media'] = None
        media_type = None

    if media_type:
        await update.message.reply_text(f"‚úÖ {media_type.capitalize()} –ø–æ–ª—É—á–µ–Ω–æ!")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    user_id = update.effective_user.id
    username = update.effective_user.username or update.effective_user.first_name
    description = context.user_data.get('defect_description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')

    db_manager.add_feedback(
        user_id=user_id,
        username=username,
        message=f"üö® –û–ë–†–ê–©–ï–ù–ò–ï –û –ë–†–ê–ö–ï: {description}",
        media_type=media_type,
        media_file_id=context.user_data['defect_media']
    )

    await update.message.reply_text(
        "‚è≥ <b>–û–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!</b>\n\n"
        "–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —á—É—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏. "
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ. –ù–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
        "<i>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!</i>",
        parse_mode='HTML',
        reply_markup=MAIN_MENU_KEYBOARD
    )

    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data.clear()
    return ConversationHandler.END


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    help_text = (
        "ü§ñ <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "‚Ä¢ /cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n\n"
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n"
        "‚Ä¢ <b>–í–æ–ø—Ä–æ—Å –ø–æ —Ç–æ–≤–∞—Ä—É</b> - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–≤–∞—Ä–µ\n"
        "‚Ä¢ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–∞–∫–∞</b> - –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ —Å —Ç–æ–≤–∞—Ä–æ–º\n"
        "‚Ä¢ <b>–ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤</b> - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ–Ω—É—Å–µ\n"
        "‚Ä¢ <b>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</b> - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
    )
    await update.message.reply_text(help_text, parse_mode='HTML')


async def cancel_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text(
        "–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω–µ–Ω. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=MAIN_MENU_KEYBOARD
    )
    context.user_data.clear()
    return ConversationHandler.END


def create_defect_conversation_handler():
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–∞–∫–∞."""
    return ConversationHandler(
        entry_points=[
            MessageHandler(filters.Text(["–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–∞–∫–∞"]), start_defect_conversation)
        ],
        states={
            DESCRIPTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_description)
            ],
            MEDIA: [
                MessageHandler(filters.PHOTO | filters.VIDEO | filters.ATTACHMENT | filters.TEXT, handle_media)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel_conversation),
            MessageHandler(filters.Text(["–û—Ç–º–µ–Ω–∞", "–ù–∞–∑–∞–¥"]), cancel_conversation)
        ],
        allow_reentry=True
    )


def create_product_question_conversation_handler():
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ –ø–æ —Ç–æ–≤–∞—Ä—É."""
    return ConversationHandler(
        entry_points=[
            MessageHandler(filters.Text(["–í–æ–ø—Ä–æ—Å –ø–æ —Ç–æ–≤–∞—Ä—É"]), handle_product_question)
        ],
        states={
            SELECT_SHOP: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_shop_selection)
            ],
            SELECT_CATEGORY: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_category_selection)
            ],
            PRODUCT_QUESTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_product_question_text)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel_conversation),
            MessageHandler(filters.Text(["–û—Ç–º–µ–Ω–∞", "–ù–∞–∑–∞–¥"]), cancel_conversation)
        ],
        allow_reentry=True
    )


# async def debug_filters(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
#     """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã filters."""
#     import inspect
#     filter_attrs = [attr for attr in dir(filters) if not attr.startswith('_')]
#     available_filters = "\n".join(filter_attrs)
#     await update.message.reply_text(f"üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:\n\n{available_filters}")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫."""
    logger.error("Exception while handling an update:", exc_info=context.error)

    # –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞, –ª–æ–≥–∏—Ä—É–µ–º –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—Ç—É
    if isinstance(context.error, TimedOut):
        logger.warning("Telegram API timeout occurred, retrying...")
    else:
        # –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try:
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
        except Exception:
            logger.error("Could not send error message to user")


async def start_feedback_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."""
    await update.message.reply_text(
        "üìù <b>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</b>\n\n"
        "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞, "
        "—á–∞—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–ª–∏ —Ç–æ–≤–∞—Ä–∞, –∞ —Ç–∞–∫–∂–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
        parse_mode='HTML',
        reply_markup=ReplyKeyboardRemove()
    )
    return FEEDBACK


async def handle_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    feedback_text = update.message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    user_id = update.effective_user.id
    username = update.effective_user.username or update.effective_user.first_name

    db_manager.add_feedback(
        user_id=user_id,
        username=username,
        message=f"üìù –û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨: {feedback_text}"
    )

    await update.message.reply_text(
        "‚úÖ <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!</b>\n\n"
        "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π.\n"
        "–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è —Å—Ç–∞—Ç—å –ª—É—á—à–µ!",
        parse_mode='HTML',
        reply_markup=MAIN_MENU_KEYBOARD
    )

    return ConversationHandler.END


async def handle_bonus_request(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ –∑–∞ –æ—Ç–∑—ã–≤."""
    bonus_text = (
        "üí∞ <b>–ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤</b>\n\n"
        "–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å!\n"
        "–ï—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã–º —É –Ω–∞—Å —Ç–æ–≤–∞—Ä–æ–º, –±—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –≤–∞—à–µ–º—É –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º—É –æ—Ç–∑—ã–≤—É\n"
        "‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è.\n\n"
        "<b>–ü–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞:</b>\n"
        "   1. –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç\n"
        "   2. –ü—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "   3. –£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞\n\n"
        "<i>‚ùóÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ: –±–æ–Ω—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏–∑ –†–§</i>\n\n"
        "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –≤–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞:"
    )
    await update.message.reply_text(
        bonus_text,
        parse_mode='HTML',
        reply_markup=ReplyKeyboardRemove()
    )
    return BONUS_SCREENSHOT


async def handle_bonus_screenshot(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞."""
    if update.message.photo:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∞–º–æ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤ —Å–ø–∏—Å–∫–µ)
        context.user_data['bonus_screenshot'] = update.message.photo[-1].file_id
        await update.message.reply_text(
            "‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—É—á–µ–Ω! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞:\n\n"
            "‚Ä¢ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (–°–±–µ—Ä, –¢–∏–Ω—å–∫–æ—Ñ—Ñ –∏ –¥—Ä.)\n"
            "‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–¥–ª—è Qiwi, –ÆMoney)\n"
            "‚Ä¢ –î—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±",
            reply_markup=ReplyKeyboardMarkup(
                [["–ù–∞–∑–∞–¥"]],
                resize_keyboard=True
            )
        )
        return BONUS_METHOD

    elif update.message.document:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–∞–∫ —Ñ–∞–π–ª)
        context.user_data['bonus_screenshot'] = update.message.document.file_id
        context.user_data['screenshot_type'] = 'document'
        await update.message.reply_text(
            "‚úÖ –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞...",
            reply_markup=ReplyKeyboardMarkup(
                [["–ù–∞–∑–∞–¥"]],
                resize_keyboard=True
            )
        )
        return BONUS_METHOD

    else:
        await update.message.reply_text(
            "üìé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞ –∫–∞–∫ —Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é."
        )
        return BONUS_SCREENSHOT


async def handle_bonus_method(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞."""
    bonus_method = update.message.text

    if bonus_method == "–ù–∞–∑–∞–¥":
        await update.message.reply_text(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...",
            reply_markup=ReplyKeyboardRemove()
        )
        return BONUS_SCREENSHOT

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞
    context.user_data['bonus_method'] = bonus_method

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    user_id = update.effective_user.id
    username = update.effective_user.username or update.effective_user.first_name
    screenshot_id = context.user_data.get('bonus_screenshot', '–ù–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞')
    method = context.user_data.get('bonus_method', '–ù–µ —É–∫–∞–∑–∞–Ω')

    db_manager.add_feedback(
        user_id=user_id,
        username=username,
        message=f"üí∞ –ó–ê–Ø–í–ö–ê –ù–ê –ë–û–ù–£–°: –°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è - {method} | –°–∫—Ä–∏–Ω—à–æ—Ç: {screenshot_id}",
        media_file_id=screenshot_id,
        media_type="screenshot",
    )

    await update.message.reply_text(
        "üéâ <b>–ó–∞—è–≤–∫–∞ –Ω–∞ –±–æ–Ω—É—Å –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n"
        "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞ –∑–∞ –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.\n\n"
        "<b>–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:</b>\n"
        f"‚Ä¢ –°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è: {bonus_method}\n\n"
        "–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.\n\n"
        "<i>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!</i>",
        parse_mode='HTML',
        reply_markup=MAIN_MENU_KEYBOARD
    )

    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data.clear()
    return ConversationHandler.END


def create_bonus_conversation_handler():
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –±–æ–Ω—É—Å–∞ –∑–∞ –æ—Ç–∑—ã–≤."""
    return ConversationHandler(
        entry_points=[
            MessageHandler(filters.Text(["–ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤"]), handle_bonus_request)
        ],
        states={
            BONUS_SCREENSHOT: [
                MessageHandler(filters.PHOTO | filters.ATTACHMENT | filters.TEXT, handle_bonus_screenshot)
            ],
            BONUS_METHOD: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_bonus_method)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel_conversation),
            MessageHandler(filters.Text(["–û—Ç–º–µ–Ω–∞", "–ù–∞–∑–∞–¥"]), cancel_conversation)
        ],
        allow_reentry=True
    )


def create_feedback_conversation_handler():
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."""
    return ConversationHandler(
        entry_points=[
            MessageHandler(filters.Text(["–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"]), start_feedback_conversation)
        ],
        states={
            FEEDBACK: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_feedback)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel_conversation),
            MessageHandler(filters.Text(["–û—Ç–º–µ–Ω–∞", "–ù–∞–∑–∞–¥"]), cancel_conversation)
        ],
        allow_reentry=True
    )


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    application = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("cancel", cancel_conversation))
    # application.add_handler(CommandHandler("test_db", test_db))

    # –î–æ–±–∞–≤–ª—è–µ–º ConversationHandler'—ã
    application.add_handler(create_defect_conversation_handler())
    application.add_handler(create_product_question_conversation_handler())
    application.add_handler(create_feedback_conversation_handler())
    application.add_handler(create_bonus_conversation_handler())  # ‚Üê –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

    # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "–ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤", —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å —ç—Ç–æ ConversationHandler

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND,
        handle_text_message
    ))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    application.run_polling(
        allowed_updates=Update.ALL_TYPES,
        drop_pending_updates=True
    )


if __name__ == "__main__":
    main()
